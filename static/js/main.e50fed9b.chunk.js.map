{"version":3,"sources":["components/spinner/bolt.gif","components/navbar/navbar.js","components/spinner/spinner.js","components/imageResults/ImageResults.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","navbar","react_default","a","createElement","AppBar_default","title","Spinner","src","spinner","alt","style","width","margin","display","ImageResults","state","open","currentImg","handleOpen","img","_this","setState","handleClose","imageListContent","_this2","this","images","props","GridList","cols","map","tags","key","id","subtitle","user","actionIcon","IconButton_default","onClick","largeImageURL","zoom_in_default","color","actions","FlatButton_default","label","primary","Dialog_default","modal","onRequestClose","Component","Search","searchText","amount","apiUrl","process","apiKey","proxy","onTextChange","e","val","target","value","Object","defineProperty","name","axios","get","concat","then","res","data","hits","catch","err","console","log","onAmountChange","index","TextField_default","onChange","floatingLabelText","fullWidth","SelectField_default","MenuItem_default","primaryText","length","imageResults_ImageResults","App","MuiThemeProvider_default","components_navbar_navbar","padding","search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e50fed9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bolt.6783ba8e.gif\";","import React from 'react'\r\nimport AppBar from 'material-ui/AppBar'\r\n\r\nconst navbar = ()=> <AppBar title=\"PixaBay Image Finder\" />\r\n\r\nexport default navbar;","import React from 'react'\r\nimport spinner from './bolt.gif'\r\nconst Spinner = ()=> {\r\n    return (\r\n        <div>\r\n            <img src={spinner}\r\n            alt=\"LOADING...\"\r\n            style={{width:\"500px\", margin: \"40px auto\", display:'block'}}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GridList, GridTile} from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport Spinner from '../spinner/spinner.js';\r\n\r\nclass ImageResults extends Component {\r\n    state = {\r\n        open : false,\r\n        currentImg: '' \r\n    }\r\n    handleOpen = img =>{\r\n         this.setState({open:true, currentImg: img});\r\n    }\r\n    handleClose = img =>{\r\n        this.setState({open:false});\r\n    }\r\n    render() {\r\n        let imageListContent;\r\n        const {images} = this.props;\r\n        if(images){\r\n            imageListContent = (\r\n                <GridList cols={3}>\r\n                    {images.map(img=>(\r\n                        <GridTile\r\n                        title={img.tags}\r\n                        key={img.id}\r\n                        subtitle={\r\n                            <span>\r\n                                by <strong>{img.user}</strong>\r\n                            </span>\r\n                        }\r\n                        actionIcon={\r\n                            <IconButton onClick={()=>this.handleOpen(img.largeImageURL)}>\r\n                                <ZoomIn color=\"white\"/>\r\n                            </IconButton>\r\n                        }\r\n                        >\r\n                            <img src={img.largeImageURL} alt=\"\"/>\r\n                        </GridTile>\r\n                    ))}\r\n                </GridList>\r\n            )\r\n        }else{\r\n            imageListContent =  <Spinner/>\r\n        }\r\n\r\n        const actions = [\r\n            <FlatButton label='close' primary={true} onClick={this.handleClose}/>\r\n        ]\r\n\r\n\r\n        return (\r\n            <div>\r\n                {imageListContent}\r\n                <Dialog\r\n                    actions={actions}\r\n                    modal={false}\r\n                    open={this.state.open}\r\n                    onRequestClose={this.handleClose}\r\n                >\r\n                    <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nImageResults.propTypes = {\r\n    images: PropTypes.array.isRequired\r\n}\r\nexport default ImageResults;","import React, { Component } from 'react'\r\nimport TextField from 'material-ui/TextField';\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport axios from 'axios';\r\nimport ImageResults from '../imageResults/ImageResults';\r\n\r\nclass Search extends Component {\r\n    \r\n    state = {\r\n        searchText: '',\r\n        amount: 15,\r\n        apiUrl: process.env.REACT_APP_API_URL,\r\n        apiKey: process.env.REACT_APP_API_KEY,\r\n        proxy: process.env.REACT_APP_PROXY,\r\n        images: []\r\n    }\r\n\r\n    onTextChange = (e)=>{\r\n        const val = e.target.value;\r\n        this.setState({[e.target.name]:e.target.value},\r\n            ()=>{\r\n                if(val === ''){\r\n                    this.setState({images: []});\r\n                }else{\r\n                    //Add Proxy if CORS err encountered\r\n                    axios.get(`https://cors-anywhere.herokuapp.com/${this.state.apiUrl}/?key=${this.state.apiKey}\r\n                    &q=${this.state.searchText}&image_type=photo\r\n                    &per_page=${this.state.amount}&safesearch=true`)\r\n                    .then(res => this.setState({images: res.data.hits}))\r\n                    .catch(err => console.log(err));\r\n                }                \r\n            });\r\n    }\r\n    onAmountChange = (e, index, value)=> this.setState({amount:value});\r\n\r\n    render() {\r\n        console.log(this.state.images);\r\n        return (\r\n            <div>\r\n                <TextField \r\n                    name=\"searchText\"\r\n                    value={this.state.searchText}\r\n                    onChange={this.onTextChange}\r\n                    floatingLabelText=\"Search For Images\"\r\n                    fullWidth={true}\r\n                />\r\n                <br />\r\n                <SelectField\r\n                    name='amount'\r\n                    onChange={this.onAmountChange}\r\n                    value={this.state.amount}\r\n                    floatingLabelText=\"Amount\"                    \r\n                >\r\n                    <MenuItem value={10} primaryText=\"10\"/>\r\n                    <MenuItem value={15} primaryText=\"15\"/>\r\n                    <MenuItem value={20} primaryText=\"20\"/>\r\n                    <MenuItem value={30} primaryText=\"30\"/>\r\n                    <MenuItem value={40} primaryText=\"40\"/>\r\n                    <MenuItem value={50} primaryText=\"50\"/>\r\n                </SelectField>\r\n                <br/>\r\n                {this.state.images.length > 0 ? (<ImageResults images={this.state.images}/>) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport NavBar from './components/navbar/navbar';\nimport Search from './components/search/Search'\n\nfunction App() {\n  return (\n    <MuiThemeProvider>\n      <div>\n        <NavBar/>\n        <div style={{padding:'20px'}}>          \n          <Search />\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}